name: Persistent Ubuntu VPS (SSHX + Autosave + Heartbeat + PufferPanel)

on:
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 350  # Max ~6 hours

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Prepare vm_data folder
        run: |
          mkdir -p $GITHUB_WORKSPACE/vm_data
          echo "✅ vm_data folder ready"

      - name: Restore VM data from vm-data branch
        run: |
          echo "🔁 Restoring VM data from vm-data branch..."
          cd $GITHUB_WORKSPACE/vm_data
          git init -q
          git remote add origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin vm-data || echo "⚠️ No vm-data branch yet"
          git checkout -f origin/vm-data || echo "⚠️ vm-data branch empty, starting fresh"
          echo "✅ Data restored"

      - name: Install and start SSHX in background
        run: |
          cd $GITHUB_WORKSPACE/vm_data
          echo "⚙️ Installing and starting SSHX..."
          nohup bash -c "curl -sSf https://sshx.io/get | sh -s run > sshx_link.txt 2>&1" &
          sleep 10
          SSHX_LINK=$(grep -Eo 'https://sshx.io/[^ ]+' sshx_link.txt || echo "❌ SSHX link not found")
          echo "🌐 SSHX Link: $SSHX_LINK"
          echo "$SSHX_LINK" >> status.log
          echo "✅ SSHX running in background"

      - name: Start PufferPanel if folder exists
        run: |
          PUPPER_DIR="$GITHUB_WORKSPACE/vm_data/puffer"
          if [ -d "$PUPPER_DIR" ]; then
            echo "⚙️ Starting PufferPanel..."
            cd "$PUPPER_DIR"
            nohup php artisan pufferpanel:serve > pufferpanel.log 2>&1 &
            echo "✅ PufferPanel started, logs: $PUPPER_DIR/pufferpanel.log"
          else
            echo "⚠️ Puffer folder not found, skipping PufferPanel"
          fi

      - name: Start heartbeat & 1-second autosave (background)
        run: |
          cd $GITHUB_WORKSPACE/vm_data
          nohup bash -c "
          while true; do
            # Heartbeat log
            echo \"[\$(date '+%Y-%m-%d %H:%M:%S')] ✅ VPS alive (autosave running)\" >> status.log

            # Git autosave
            git init -q
            git config user.email 'actions@github.com'
            git config user.name 'github-actions'
            git add .
            git commit -m \"🕐 Autosave at \$(date)\" -q || true

            # Ensure branch exists
            if ! git rev-parse --abbrev-ref HEAD >/dev/null 2>&1; then
              git checkout -b vm-data
            else
              git branch -M vm-data
            fi

            # Push using PAT_TOKEN
            git push -f https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} vm-data >/dev/null 2>&1 || true

            sleep 1
          done
          " &
          echo "✅ Heartbeat & autosave running in background"

      - name: Keep VPS alive
        run: |
          while true; do sleep 60; done

      - name: Final save before shutdown
        if: always()
        run: |
          cd $GITHUB_WORKSPACE/vm_data
          git init -q
          git config user.email 'actions@github.com'
          git config user.name 'github-actions'
          git add .
          git commit -m "💾 Final autosave $(date)" -q || true
          if ! git rev-parse --abbrev-ref HEAD >/dev/null 2>&1; then
            git checkout -b vm-data
          else
            git branch -M vm-data
          fi
          git push -f https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} vm-data || true
          echo "✅ Final data saved"
