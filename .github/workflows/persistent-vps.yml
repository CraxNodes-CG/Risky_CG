name: Auto-Restarting Persistent Ubuntu VPS (SSHX + 1s Autosave)

on:
  workflow_dispatch:

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 355 # Max GitHub limit (~6h)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore previous VM data
        run: |
          echo "üîÅ Restoring /home/runner/vm_data from vm-data branch..."
          mkdir -p /home/runner/vm_data
          git fetch origin vm-data || true
          git checkout vm-data -- . || true
          echo "‚úÖ Data restored."

      - name: Install SSHX
        run: |
          echo "‚öôÔ∏è Installing SSHX..."
          curl -sSf https://sshx.io/get | sh -s install
          echo "‚úÖ SSHX installed."

      - name: Start SSHX VPS
        run: |
          echo "üöÄ Starting Ubuntu VPS..."
          nohup bash -c "cd /home/runner/vm_data && sshx run -p 22 -t" > sshx.log 2>&1 &
          sleep 5
          echo "üåê SSHX Link (open in browser):"
          cat sshx.log | grep -Eo 'https://sshx.io/[a-zA-Z0-9]+'

      - name: Start 1-Second AutoSave
        run: |
          echo "üíæ Launching 1-second autosave loop..."
          cat > /tmp/autosave.sh <<'EOF'
          cd /home/runner/vm_data
          git init
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote remove origin 2>/dev/null || true
          git remote add origin "https://github.com/${GITHUB_REPOSITORY}"

          while true; do
            git add .
            git commit -m "Auto-save: $(date '+%Y-%m-%d %H:%M:%S')" >/dev/null 2>&1 || true
            git push -f origin HEAD:vm-data >/dev/null 2>&1 || true
            sleep 1
          done
          EOF
          bash /tmp/autosave.sh &
          echo "‚úÖ Autosave is running every 1s."

      - name: Keep VPS alive
        run: |
          echo "üåÄ VPS running. Press Ctrl+C to stop (or wait for timeout)."
          while true; do sleep 60; done

      - name: Backup VM data before exit
        if: always()
        run: |
          echo "üì¶ Saving VM data before exit..."
          cd /home/runner/vm_data
          git init
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git remote remove origin 2>/dev/null || true
          git remote add origin "https://github.com/${GITHUB_REPOSITORY}"
          git add .
          git commit -m "Final backup $(date)" || true
          git push -f origin HEAD:vm-data || true
          echo "‚úÖ Data backed up."

      - name: üîÅ Auto-Restart Workflow on Exit
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "‚ôªÔ∏è Re-triggering workflow for auto-restart..."
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/persistent-vps.yml/dispatches \
            -d '{"ref":"${{ github.ref_name }}"}'
          echo "‚úÖ Restart signal sent successfully."
